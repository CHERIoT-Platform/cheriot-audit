name: cheriot-audit CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Ubuntu Latest Release",
            os: "ubuntu-latest",
            build-type: Release,
            dependencies: "sudo apt install ninja-build",
            defines: ""
          }
        - {
            name: "Ubuntu 22.04 Release",
            os: "ubuntu-22.04",
            build-type: Release,
            dependencies: "sudo apt install ninja-build",
            defines: ""
          }
        - {
            name: "macOS Release",
            os: "macos-latest",
            build-type: Release,
            dependencies: "brew update && brew install cmake ninja",
            defines: ""
          }
        - {
            name: "Ubuntu Latest Debug",
            os: "ubuntu-latest",
            build-type: Debug,
            dependencies: "sudo apt install ninja-build",
            defines: ""
          }
        - {
            name: "Ubuntu 22.04 Debug",
            os: "ubuntu-22.04",
            build-type: Debug,
            dependencies: "sudo apt install ninja-build",
            defines: ""
          }
        - {
            name: "macOS Debug",
            os: "macos-latest",
            build-type: Debug,
            dependencies: "brew update && brew install cmake ninja",
            defines: ""
          }
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.name }}
    steps:
    - uses: actions/checkout@v2
    - name: Install ninja
      run: ${{ matrix.config.dependencies }}
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.config.build-type}} ${{matrix.config.defines}} -G Ninja
    - name: Build
      working-directory: ${{github.workspace}}/build
      # Build your program with the given configuration
      run: NINJA_STATUS="%p [%f:%s/%t] %o/s, %es" && ninja
    - name: Test
      working-directory: ${{github.workspace}}/build
      # Build your program with the given configuration
      run: ctest -j4 --output-on-failure
